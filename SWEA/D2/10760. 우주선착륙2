import java.util.*;
import java.io.*;

public class SWEA_10760_우주선착륙2 {
	public static void main(String[] args) throws Exception{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringBuilder sb = new StringBuilder(100);
		
		int T = Integer.parseInt(br.readLine().trim());
		
		for(int t=0; t<T; t++) {
			StringTokenizer st = new StringTokenizer(br.readLine().trim());
			int N = Integer.parseInt(st.nextToken()); // 행
			int M  = Integer.parseInt(st.nextToken()); //열
			int[][] heights = new int[N][M];
			int[] dRow = {0, 0, 1, -1, -1, -1, 1, 1}; //동 서 남 북 북서 북동 남서 남동
			int[] dCol = {1, -1, 0, 0, -1, 1, -1, 1};
			
			//배열 초기화
			for(int i=0; i<N; i++) {
				st = new StringTokenizer(br.readLine().trim());
				for(int j=0; j<M; j++) {
					heights[i][j] = Integer.parseInt(st.nextToken());
				}
			}
			
			int totalCnt=0;
			for(int i=0; i<N; i++) {
				for(int j=0; j<M; j++) {
					int cnt = 0;
					for(int k=0; k<8; k++) {
						int flagR = i + dRow[k];
						int flagC = j + dCol[k];

            // 이동하는 위치가 배열의 범위 안에 들고 , 착륙지점보다 높이가 낮다면 카운트 증가
						if(flagR >= 0 && flagR < N && flagC >=0 && flagC < M && heights[flagR][flagC] < heights[i][j]) {
							cnt++;
						}
					}
					if(cnt >= 4) totalCnt++;
				}
			}
			sb.append("#").append(t+1).append(" ").append(totalCnt).append("\n");
		}//end testcase
		bw.write(sb.toString());
		bw.close();
		br.close();
		
	}
}
